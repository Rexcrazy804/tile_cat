use bevy::{prelude::*, window::PrimaryWindow};

use rand::{random};
use super::{
    GameState,
    SCALE_FACTOR,
};

pub const GROUND_Y_OFFSET: f32 = todo!();
const GROUND_SIZE: f32 = 16.0;

#[derive(Component)]
struct Ground;

struct GroundPlugin;
impl Plugin for GroundPlugin {
    fn build(&self, app: &mut App) {
        
    }
}

fn spawn_ground(
    mut commands: Commands,
    window_query: Query<&Window, With<PrimaryWindow>>,
    asset_server: Res<AssetServer>
) {
    let Ok(window) = window_query.get_single() else { return };

    let ground_count = ((window.width()/SCALE_FACTOR)/GROUND_SIZE).ceil();
    let initial_x pos = -window.width()/2

    for i in 0..ground_count {

    }
}
